---
name: Update python linting dependencies in-sync with pre-commit
on:
  merge_group:
  pull_request:
    branches: [main]
jobs:
  determine-dependency-groups:
    if: ${{ github.actor == 'renovate[bot]' && contains(github.head_ref, '/python-deps/') }}
    runs-on: ubuntu-latest
    env:
      GITHUB_HEAD_REF: ${{ github.head_ref }}
    outputs:
      export-groups: ${{ steps.set-output.outputs.export-groups }}
    steps:
      - name: Determine the groups that will need to be exported
        id: set-output
        run: |
          branch_name="$GITHUB_HEAD_REF"
          export_groups=""
          if [[ "$branch_name" == "renovate/*" ]]; then
            if [[ "$branch_name" == "*update_development_dependencies*" ]]; then
              export_groups+="update_development_dependencies:actions/update_development_dependencies,"
            fi
            if [[ "$branch_name" == "*create_unique_testpypi_version*" ]]; then
              export_groups+="create_unique_testpypi_version:actions/create_unique_testpypi_version,"
            fi
            if [[ "$branch_name" == "*find_unreleased_changelog_items*" ]]; then
              export_groups+="find_unreleased_changelog_items:actions/find_unreleased_changelog_items,"
            fi
            if [[ "$branch_name" == "*tests*" ]]; then
              export_groups+="tests,"
            fi
            if [[ "$branch_name" == "*docs*" ]]; then
              export_groups+="docs:doc_config,"
            fi
          fi
          echo "export-groups=$export_groups" >> "$GITHUB_OUTPUT"
  update-python-and-pre-commit-deps:
    if: ${{ github.actor == 'renovate[bot]' && contains(github.head_ref, '/python-deps/') }}
    needs: determine-dependency-groups
    uses: ./.github/workflows/_reusable-update-python-and-pre-commit-dependencies.yml
    with:
      commit-user-name: ${{ vars.TEK_OPENSOURCE_NAME }}
      commit-user-email: ${{ vars.TEK_OPENSOURCE_EMAIL }}
      export-dependency-groups: ${{ needs.determine-dependency-groups.outputs.export-groups }}
    permissions:
      contents: write
    secrets:
      checkout-token: ${{ secrets.TEK_OPENSOURCE_TOKEN }}
      gpg-signing-key-private: ${{ secrets.TEK_OPENSOURCE_GPG_SIGNING_KEY_PRIVATE }}
      gpg-signing-key-passphrase: ${{ secrets.TEK_OPENSOURCE_GPG_SIGNING_KEY_PASSPHRASE }}
