---
name: Package Build
on:
  workflow_call:
    inputs:
      package-name:
        description: The name of the package to build, install, and import (this must
          be the package's importable name).
        required: true
        type: string
      python-versions-array:
        description: A valid JSON array of Python versions to validate the package
          can be installed with.
        required: true
        type: string
      operating-systems-array:
        description: A valid JSON array of operating system names to validate the
          package can be installed on.
        required: false
        default: '["ubuntu", "windows", "macos"]'
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} (Reusable)
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
env:
  PACKAGE_NAME: ${{ inputs.package-name }}
jobs:
  # Verify the package can be built
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    environment: package-build
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@73aea398b9c8de9ea9e4464c6b13cb8b1f3d6294 # v2.9.0
        id: build-pkg
        with:
          attest-build-provenance-github: ${{ !github.event.pull_request.head.repo.fork && !contains(fromJSON('["dependabot[bot]", "renovate[bot]"]'), github.actor) }}
  # Verify the package can be installed
  install-package:
    name: Install package
    needs: build-package
    runs-on: ${{ matrix.os-name }}-latest
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os-name: ${{ fromJSON(inputs.operating-systems-array) }}
        python-version: ${{ fromJSON(inputs.python-versions-array) }}
    steps:
      - name: Download built packages
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: Packages
          path: dist
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f  # v5.1.1
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Test installing wheel
        shell: bash
        run: pip install dist/*.whl
      - name: Test importing ${{ env.PACKAGE_NAME }}
        run: python -c "import ${{ env.PACKAGE_NAME }}"
      - name: Uninstall wheel
        shell: bash
        run: |
          pip uninstall -y ${{ env.PACKAGE_NAME }}
          pip freeze | xargs pip uninstall -y
      - name: Test installing tarball
        shell: bash
        run: pip install dist/*.tar.gz
      - name: Test importing ${{ env.PACKAGE_NAME }}
        run: python -c "import ${{ env.PACKAGE_NAME }}"
      - name: Uninstall tarball
        shell: bash
        run: |
          pip uninstall -y ${{ env.PACKAGE_NAME }}
          pip freeze | xargs pip uninstall -y
  # Check that all jobs passed
  check-build-and-install-passed:
    if: ${{ !cancelled() }}
    needs: [build-package, install-package]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe  # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
