---
name: Test code
on:
  workflow_call:
    inputs:
      repo-name:
        description: The full name of the repository to use to gate Codecov uploads,
          in the format `owner/repo`.
        required: true
        type: string
      python-versions-array:
        description: A valid JSON array of Python versions to test against. A valid
          option is also the string 'pyproject.toml', indicating to use the defined
          Python version from the pyproject.toml file.
        required: true
        type: string
      operating-systems-array:
        description: A valid JSON array of operating system names to run tests on.
        required: false
        default: '["ubuntu", "windows", "macos"]'
        type: string
      upload-to-codecov:
        description: A boolean indicating if coverage results should be uploaded to
          Codecov.
        required: false
        default: false
        type: boolean
    secrets:
      codecov-token:
        description: The token to use to upload coverage results to Codecov. Only
          required when the `upload-codecov` input variable is set to `true`.
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} (Reusable)
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
jobs:
  # Basic testing & linting
  test-general:
    runs-on: ${{ matrix.os-name }}-latest
    strategy:
      fail-fast: false
      matrix:
        os-name: ${{ fromJSON(inputs.operating-systems-array) }}
        python-version: ${{ fromJSON(inputs.python-versions-array) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: lts/*
          check-latest: true
      - name: Set up Python (version)
        if: ${{ matrix.python-version != 'pyproject.toml' }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Set up Python (pyproject.toml)
        if: ${{ matrix.python-version == 'pyproject.toml' }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: ${{ matrix.python-version }}
          check-latest: true
      - name: Install dependencies
        run: python -m pip install tox tox-gh-actions
      - name: Set up pre-commit cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml')
            }}
      - name: Run tox
        run: tox -v
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        if: ${{ !cancelled() }}
        with:
          name: artifact_${{ matrix.os-name }}_${{ matrix.python-version }}_tests_and_linting
          include-hidden-files: true
          path: |
            .results_*/**
            .coverage*
  # Quick testing with coverage (no linting)
  test-fast:
    runs-on: ${{ matrix.os-name }}-latest
    env:
      REPO_NAME: ${{ inputs.repo-name }}
      pytest_report_title: Test Results (${{ matrix.os-name }})
    strategy:
      fail-fast: false
      matrix:
        os-name: ${{ fromJSON(inputs.operating-systems-array) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: lts/*
          check-latest: true
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version-file: pyproject.toml
      - name: Install tox
        run: python -m pip install tox
      - name: Run tox
        id: run-tox
        run: tox -ve tests
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        if: ${{ !cancelled() }}
        with:
          name: artifact_${{ matrix.os-name }}_tests
          include-hidden-files: true
          path: |
            .results_*/**
            .coverage*
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5c47607acb93fed5485fdbf7232e8a31425f672a # v5.0.2
        if: ${{ always() && inputs.upload-to-codecov && github.repository == env.REPO_NAME && contains(fromJSON('["success", "failure"]'), steps.run-tox.outcome) }}
        with:
          token: ${{ secrets.codecov-token }}
          files: ./.coverage_tests.xml
          name: codecov-${{ matrix.os-name }}
          fail_ci_if_error: true
          verbose: true
  # Update the workflow summary with test results
  create-job-summary:
    name: Test Results
    if: ${{ !cancelled() }}
    needs: test-fast
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          path: artifacts
      - name: Generate Summary
        uses: phoenix-actions/test-reporting@f957cd93fc2d848d556fa0d03c57bc79127b6b5e  # v15
        with:
          name: Test Results
          only-summary: false
          output-to: step-summary
          path: artifacts/**/.results_tests/results.xml
          reporter: java-junit
          fail-on-error: false
          max-annotations: 0
  # Check that all jobs passed
  check-tests-passed:
    if: ${{ !cancelled() }}
    needs: [test-general, test-fast, create-job-summary]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe  # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
